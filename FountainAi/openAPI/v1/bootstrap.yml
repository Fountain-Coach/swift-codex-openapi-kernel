---
openapi: 3.1.0
info:
  title: FountainAI Bootstrap Service
  description: Initialize corpora, seed GPT roles, and add semantic baselines.
  version: 1.0.0
servers:
  - url: http://bootstrap.fountain.coach/api/v1
paths:
  /bootstrap/corpus/init:
    post:
      tags:
        - Bootstrap
      summary: "Bootstrap: Init Corpus + Seed Roles + Default Reflection"
      description: |
        1) Creates empty corpus via `/corpus-init` on Awareness.
        2) Seeds default GPT roles via `/bootstrap/roles/seed`.
        3) Enqueues the 'role-health-check' reflection via the Awareness
           `/reflections` API.
      operationId: bootstrapInitializeCorpus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitIn'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /bootstrap/roles/seed:
    post:
      tags:
        - Bootstrap
      summary: "Bootstrap: Seed GPT Roles"
      description: >
        Populates an existing corpus with the five default GPT role prompts.
      operationId: bootstrapSeedRoles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleInitRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefaults'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /bootstrap/corpus/reflect:
    post:
      tags:
        - Bootstrap
      summary: "Bootstrap: Enqueue Default Reflection"
      description: >
        Enqueues the 'role-health-check' reflection into an existing corpus.
      operationId: bootstrapEnqueueReflection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitIn'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /bootstrap/roles/promote:
    post:
      tags:
        - Bootstrap
      summary: "Bootstrap: Promote Reflection to Role"
      description: >
        Fetches the last 'role-health-check' reflection and
        registers it as a new GPT role.
      operationId: bootstrapPromoteReflection
      parameters:
        - name: corpusId
          in: query
          required: true
          schema:
            type: string
            title: Corpusid
        - name: roleName
          in: query
          required: true
          schema:
            type: string
            title: Rolename
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleInfo'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /bootstrap/baseline:
    post:
      tags:
        - Bootstrap
      summary: "Bootstrap: Add Baseline, Stream Analyses & Persist Results"
      description: |
        1) Stores your new baseline snapshot in the Awareness Service.
        2) Immediately streams back two SSE channels:
         • **drift** – your content’s drift analysis in real time,
           then persisted as `<baselineId>-drift`.
         • **patterns** – your narrative patterns analysis in real time,
           then persisted as `<baselineId>-patterns`.
        3) Once streaming finishes, fire-and-forget jobs enqueue:
         • **history** aggregation (via `/analytics/history`)
         • **semantic-arc** synthesis (via `/analytics/semantic-arc`)
        All of that—live streaming, persistence of each slice, and background
        analytics—happens in one concise call.
      operationId: bootstrapAddBaseline
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaselineIn'
      responses:
        '200':
          description: Successful Response
          content:
            application/json: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /bootstrap/roles:
    post:
      tags:
        - Roles
      summary: Seed GPT Roles
      description: >
        Populates the specified corpus with five GPT role prompts.
        Prerequisite: call `/corpus-init` first.
      operationId: seedRoles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleInitRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefaults'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    BaselineIn:
      type: object
      title: BaselineIn
      description: |
        Request model for adding a new baseline snapshot to a corpus.
        corpusId: Identifier of the target corpus.
        baselineId: Unique version identifier for this baseline.
        content: The textual or JSON content of the baseline.
      required:
        - corpusId
        - baselineId
        - content
      properties:
        corpusId:
          type: string
          title: Corpusid
        baselineId:
          type: string
          title: Baselineid
        content:
          type: string
          title: Content
    HTTPValidationError:
      type: object
      title: HTTPValidationError
      properties:
        detail:
          type: array
          title: Detail
          items:
            $ref: '#/components/schemas/ValidationError'
    InitIn:
      type: object
      title: InitIn
      description: |
        Input model for initializing a corpus.
        corpusId: Unique identifier for the corpus to create.
      required:
        - corpusId
      properties:
        corpusId:
          type: string
          title: Corpusid
    InitOut:
      type: object
      title: InitOut
      description: |
        Output model after initializing a corpus or performing other operations.
        message: Human-readable status message.
      required:
        - message
      properties:
        message:
          type: string
          title: Message
    RoleDefaults:
      type: object
      title: RoleDefaults
      description: |
        Response model containing the five default GPT role prompts.
        drift: Prompt template for the drift analysis role.
        semantic_arc: Prompt template for the semantic arc analysis role.
        patterns: Prompt template for the patterns analysis role.
        history: Prompt template for the history/reflections role.
        view_creator: Prompt template for the view-creation agent role.
      required:
        - drift
        - semantic_arc
        - patterns
        - history
        - view_creator
      properties:
        drift:
          type: string
          title: Drift
        semantic_arc:
          type: string
          title: Semantic Arc
        patterns:
          type: string
          title: Patterns
        history:
          type: string
          title: History
        view_creator:
          type: string
          title: View Creator
    RoleInfo:
      type: object
      title: RoleInfo
      description: |
        Represents a dynamically registered or promoted GPT role.
        name: Identifier for the role (e.g., "security_audit").
        prompt: Full system prompt text defining the role's analysis behavior.
      required:
        - name
        - prompt
      properties:
        name:
          type: string
          title: Name
        prompt:
          type: string
          title: Prompt
    RoleInitRequest:
      type: object
      title: RoleInitRequest
      description: |
        Request model for seeding default GPT roles into a corpus.
        corpusId: The target corpus identifier.
      required:
        - corpusId
      properties:
        corpusId:
          type: string
          title: Corpusid
    ValidationError:
      type: object
      title: ValidationError
      required:
        - loc
        - msg
        - type
      properties:
        loc:
          type: array
          title: Location
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
